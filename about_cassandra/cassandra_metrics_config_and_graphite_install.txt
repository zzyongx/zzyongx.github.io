C* 可以通过Metrics库，导出它的内部状态和统计
（包括 cache size, hit rate, client request latency, thread pool status, per column family statistics 等）。
这些metrics可以发送到 graphite 之类的工具，存储和图像化。详见：
http://www.datastax.com/dev/blog/pluggable-metrics-reporting-in-cassandra-2-0-2

配置 C* 不复杂，把 metrics-graphite 复制到 C* 的lib目录，按照上述博客配置就行。
conf 下有个实例配置，是发送到文件的，里面的metrics更多，可以基于它修改。
但是 graphite 的安装配置稍微费些力气。

安装依赖：
# yum install python-pip python-devel Django python-django-tagging; pip install Twisted

安装 graphite-web 和 Carbon，下载源码，运行 python setup.py install，安装到默认路径，
我指定其它prefix，报和 carbon.util 相关的错误。

启动 Carbon，假设 graphite-web 通过 uwsgi，以nobody用户运行
# cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf
# cp /opt/graphite/conf/storage-schemas.conf.example /opt/graphite/conf/storage-schemas.conf
# chown nobody:nobody /opt/graphite/storage/ -R
# python /opt/graphite/bin/carbon-cache.py start

安装uwsgi
# wget http://projects.unbit.it/downloads/uwsgi-latest.tar.gz
# python uwsgiconfig.py --build core
# python uwsgiconfig.py --plugin plugins/python core
# python uwsgiconfig.py --plugin plugins/carbon core
# mkdir /etc/uwsgi
# mkdir /usr/lib/uwsgi
# cp uwsgi /usr/bin/uwsgi
# cp python_plugin.so /usr/lib/uwsgi
# cp carbon_plugin.so /usr/lib/uwsg

配置nginx
listen       9292;
location / {
  uwsgi_pass unix:///tmp/uwsgi.sock;
  uwsgi_param QUERY_STRING $query_string;
  uwsgi_param REQUEST_METHOD $request_method;
  uwsgi_param CONTENT_TYPE $content_type;
  uwsgi_param CONTENT_LENGTH $content_length;
  uwsgi_param REQUEST_URI $request_uri;
  uwsgi_param PATH_INFO $document_uri;
  uwsgi_param DOCUMENT_ROOT $document_root;
  uwsgi_param SERVER_PROTOCOL $server_protocol;
  uwsgi_param REMOTE_ADDR $remote_addr;
  uwsgi_param REMOTE_PORT $remote_port;
  uwsgi_param SERVER_ADDR $server_addr;
  uwsgi_param SERVER_PORT $server_port;
  uwsgi_param SERVER_NAME $server_name;
}

配置graphite-web，主要是更改时区，创建用户
# cp /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi
# cd /opt/graphite/webapp/graphite
# cp local_settings.py.example local_settings.py
修改 local_settings.py 的TIME_ZONE，改为 'Asia/Shanghai'
# python manage.py syncdb
# python manage.py createsuperuser

启动wusgi
# uwsgi -d 1 -s /tmp/uwsgi.sock -p 4 --uid nobody --plugin /usr/lib/uwsgi/python --wsgi-file /opt/graphite/conf/graphite.wsgi

写入数据，多写入几次
# echo "local.random.diceroll 4 `date +%s`" | nc 127.0.0.1 2003

打开浏览器 http://127.0.0.1:9292/，使用刚才创建的用户登录，
就可以看到C*的数据，以及刚才写入的 local.random.diceroll
