#+TITLE: 对话机器人架构
#+SETUPFILE: ../setup/theme-readtheorg-local.setup
#+OPTIONS: toc:nil

对话的核心是理解 *意图* 。人的语言是非常丰富的，同一个 *意图* 可能有多种表达方式，根据 *场景* 的不同，同一个表达方式也可能表达不同的 *意图* 。考虑到该机器人用于移动服务，给了 *场景* 一个很强的约束，所以重点在于理解 *意图* 。

由于设计上的考虑，根据响应的不同，我们把 *意图* 分成两种，一种响应的内容是相对静态的，例如问，移动都有哪些套餐？移动公司的套餐在一定时间内是稳定的。另一种响应是动态的，例如问：我上个月的话费是多少？这里的 *意图* 是询问话费，根据用户的不同，时间的不同，响应也是不同的。我们内部把前者称作 *单轮对话* ，把后者称为 *多轮对话* 。

除了响应内容是静态的还是动态的， *多轮* 和 *单轮* 还有一个重要区别， *多轮* 的 *意图* 需要参数，我们称之为 *槽位* ，例如：查话费这个 *意图* 需要 =月份= 和 =手机号= 两个 *槽位* 信息，才能完成。当相应 *槽位* 没有信息时，需要让用户提供更多信息。

* 对话系统整体架构
[[../images/chatbot.png]]

在该架构中， *语义理解系统* 是*场景* *意图* 无关的， *对话接入* 和 *意图响应系统* 是 *场景* *意图* 相关的，也就是说是个性化开发的关键。因为涉及到登陆，所以这两者需要通过mysql、redis等方式共享一些存储信息。

* 核心子系统
** 对话接入系统
负责接入，处理对话系统的通用功能。例如：登陆，输入转换（语言转文字、文字转语音等）输出内容渲染（输出json、文本还是html？）等。微信公众号，实体机器人，APP等使用相同的api接入系统。

** 语义理解系统
负责语义理解，把人类语言转成含义明确的 *意图* ，语义理解系统是一个框架，包含不同的引擎，真正理解语义的是引擎。语义理解系统首先尝试多轮引擎，如果多轮引擎无法回答，尝试单轮，如果单轮也无法回答，说明这个问题我们没有匹配到我们配置的 *意图* 中，可以尝试系统内置的其它引擎，来理解用户 *意图* ，但此时响应的内容就不受我们控制了。

单轮引擎和多轮引擎需要我们配置语料供系统学习，以理解用户的 *意图* ，丰富的语料是理解的关键。两者的配置略有不同，貌似复杂，但配合web界面使用，就容易多了。

*** 单轮引擎
需要配置用户 *意图* 的问、答语料，同一个 *意图* 需要配置多个提问语料，尽可能涵盖同一个 *意图* 的不同表达方式。虽然引擎有语义理解能力，但是配置的语料越多，越有利于引擎学习。因为应答语料是固定的，所以也要配置进系统。

*** 多轮引擎
因为应答是动态的，多轮引擎需要 *意图响应系统* 的配合。需要配置用户 *意图* 和 *槽位* 的提问语料，以及缺失 *槽位* 时的应答语料。当多轮引擎理解用户的 *意图* 后，会把 *意图* 和它收集到的 *槽位* 信息发送给 *意图响应系统* ， *意图响应系统* 检查 *槽位* 信息是否充分，引导用户回答 *槽位* 信息（例如：您想查哪个月的话费），或者响应用户的意图（您本月的话费是93）。
