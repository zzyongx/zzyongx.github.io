#+TITLE: 将将够的测试
#+SETUPFILE: ../setup/theme-readtheorg-local.setup
#+OPTIONS: toc:nil

本文是 [[https://istacee.wordpress.com/2013/09/18/kent-beck-i-get-paid-for-code-that-works-not-for-tests/][Kent Beck : “I get paid for code that works, not for tests”]]的阅读笔记。

*Kent Beck* 是极限编程和TDD的创始人，他这句话指明了测试应该到何种程度。

老板付钱给程序员是为了编码完成某些功能，写测试是程序员对自己的编码不放心，额外做的工作，老板其实并不关心。但因为程序员太不靠谱了，所以老板往往额外花钱雇测试来完成程序员份内的事，这钱按理应该是程序员自己掏的，所以测试是有成本的。很多测试是程序员自己完成的，但多一分钟测试就少一分钟编码，并没有改变测试的成本。

出于对自己生产率和信誉的考虑，程序员应该测试到何种程度呢？JEST（Just Enough System Testing）。那么“将将够”的标准是什么呢？就是对于自己写的代码，程序员有信心达到工业级的水平，信心到这个程度，就可以不用继续增加测试了，如果不够，就写更多。不排除有人一行测试都不写就有这样的信心，这是很难得的。那么工业级的水平究竟是什么水平？想想你的Linux服务器上一次崩溃是什么时候，这就是工业级的水平。

可以看出这里的 *信心* 指标是针对个人的，如果是团队项目，大家互相改代码，有人没这么强的 *信心* 怎么办？可以强制一个JEST标准，某些类型的测试是必须写的。

如果程序员的信心和代码不匹配怎么办？建议改善代码质量、增加测试。
